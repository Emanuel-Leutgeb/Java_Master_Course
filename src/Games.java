import java.util.*;

public class Games {

    //Game FizzBuzz
    public static void lesson5_1(){
        System.out.println("Let's play FizzBuzz.");
        boolean sayNumber;

        for(int i = 1; i < 101; i++){
            sayNumber = true;

            if (i % 3 == 0 & i % 5 == 0){
                System.out.println("FizzBuzz");
                sayNumber = false;
            }
            else if (i % 3 == 0){
                System.out.println("Fizz");
                sayNumber = false;
            }
            else if (i % 5 == 0){
                System.out.println("Buzz");
                sayNumber = false;
            }

            if (sayNumber) {
                System.out.println(i);
            }
        }
    }

    //Multiplications
    public static void lesson5_2(){
        for(int i = 1; i <= 10; i++){
            System.out.printf("times %d \n", i);
            for( int j = 1; j <= 10; j++){
                System.out.printf("%d * %d = %d \n", j, i, j * i);
            }

        }
    }

    //Caesar Chiffre
    public static void lesson5_3(){
        //Random key to encrypt
        Random rnd = new Random();
        int rndNumber = rnd.nextInt(25) + 1; // From 1 to 25


        //Asking for a text to encrypt
        System.out.println("Please enter your message for encryption");
        String inputWords = Scanning.scan.nextLine();

        //Encryption
        StringBuilder codedResult = new StringBuilder(); //Generated by IntelliJ with the += (Original was #String codedResult = "";)
        for(int i = 0; i < inputWords.length(); i++) {
            char character = inputWords.charAt(i);
            //Checking if char is letter
            if (Character.isLetter(character)) {
                //Create temporary variable from character
                char tempCharacter = (char)(Character.toUpperCase(character) + rndNumber); //Enter random generated number

                if (tempCharacter > 'Z') {
                    tempCharacter = (char)(tempCharacter - 26);
                }

                if (character >= 'a') {
                    tempCharacter = (char)(tempCharacter + 32);
                }

                character = tempCharacter;
            }

            codedResult.append(character); //+=
        }

        //Print encrypt text
        System.out.println("Here is your coded Text. \nCan you find the right Key?\n");
        System.out.println("---------------------------------------------------");
        System.out.println(codedResult);
        System.out.printf("Your random key %d \n", rndNumber);
        System.out.println("---------------------------------------------------\n\n");


        StringBuilder encodedResult; //Generated by IntelliJ with the += (Original was #String encodedResult;)
        //Generate number 25 to 1
        for(int i = 25; i >= 1; i--) { //From 25 to 01
            encodedResult = new StringBuilder(); //Generated by IntelliJ with the += (Original was #encodedResult = "";)

            //Decryption
            int key; //To use it outside
            for (key = 0; key < codedResult.length(); key++) {
                char character = codedResult.charAt(key);
                //Checking if char is letter
                if (Character.isLetter(character)) {
                    //Create temporary variable from character
                    char tempCharacter = (char) (Character.toUpperCase(character) + i); //i = Enter for loop number 1-26

                    if (tempCharacter > 'Z') {
                        tempCharacter = (char) (tempCharacter - 26);
                    }

                    if (character >= 'a') {
                        tempCharacter = (char) (tempCharacter + 32);
                    }

                    character = tempCharacter;
                }

                encodedResult.append(character); //+= StringBuilder?
            }

            key = 26 - i;
            System.out.println(key + "\n" + encodedResult + "\n");
        }
    }

    //Maxima calculation
    public static void lesson5_4(){
        boolean addToList;
        int myNumber = 0;
        ArrayList<Integer> numbers = new ArrayList<>();

        while (true){
            addToList = false;
            System.out.println("Please enter a number or press 'q' to get the maximum");
            String myString = Scanning.scan.next();

            if (myString.equals("q") || myString.equals("Q")){
                break;
            }

            try {
                myNumber = Integer.parseInt(myString);
                addToList = true;
            }
            catch (NumberFormatException NoSuchElementException) {
                System.out.println("Please enter a correct number");
            }

            if(addToList){
                numbers.add(myNumber);
                for(int j : numbers){
                    System.out.println(j);
                }
            }
            System.out.println("The max value is: " + Collections.max(numbers));
        }
    }
}


